[{"content":"## Welcome to RTLBook\n\nThis is an interactive coding environment where you can explore the following libraries:\n\n| Name      | Docs |\n| ----------- | ----------- |\n| React      | [docs](https://reactjs.org/)       |\n| @testing-library/react   |  [docs](https://testing-library.com/docs/react-testing-library/intro/)        |\n| @testing-library/user-event |   [docs](https://testing-library.com/docs/user-event/intro)  |\n| @testing-library/react-hooks |  [docs](https://github.com/testing-library/react-hooks-testing-library)  |\n| @testing-library/jest-dom | [docs](https://github.com/testing-library/jest-dom#custom-matchers) |\n| expect |  [docs](https://jestjs.io/docs/expect)  |\n\nIn between each 'cell' there are buttons that can add in a new code editor or a text section.","type":"text","id":"12frm"},{"content":"Render The React Component","type":"text","id":"whxya"},{"content":"import {render, screen} from \"@testing-library/react\";\r\n\r\nfunction RoleExample(){\r\n  return <div style={{display:\"flex\", flexDirection:\"column\", gap:\"1rem\"}}>\r\n    <a href=\"/\">Link</a>\r\n    <button>Button</button>\r\n    <footer>ContentInfo</footer>\r\n    <h1>Heading</h1>\r\n    <header>Banner</header>\r\n    <div>\r\n      <img alt=\"description\" src=\"\" /> {\" \"} Img\r\n    </div>\r\n    <div>\r\n      <input type=\"checkbox\" /> {\" \"} \r\n      <label>Checkbox</label>\r\n    </div>\r\n    <div>\r\n      <input type=\"number\" />{\" \"}  \r\n      <label>Spinbutton</label>\r\n    </div>\r\n    <div>\r\n      <input type=\"radio\" /> {\" \"} \r\n      <label>Radio</label>\r\n    </div>\r\n    <div>\r\n      <input type=\"text\" />{\" \"} \r\n      <label>Textbox</label>\r\n    </div>\r\n    <li>listElement</li>\r\n    <ul>listGroup</ul>\r\n  </div>\r\n}\r\n\r\nrender(<RoleExample />)","type":"code","id":"ltwja"},{"content":"Finding Elements By Role","type":"text","id":"prvrv"},{"content":"test(\"Finding Elements By Role\", () => {\r\n  render(<RoleExample />);\r\n  const roles = [\r\n    \"link\",\r\n    \"button\",\r\n    \"contentinfo\",\r\n    \"heading\",\r\n    \"banner\",\r\n    \"img\",\r\n    \"checkbox\",\r\n    \"spinbutton\",\r\n    \"radio\",\r\n    \"textbox\",\r\n    \"listitem\",\r\n    \"list\"\r\n  ];\r\n  roles.forEach(role => {\r\n    const elem = screen.getByRole(role);\r\n    expect(elem).toBeInTheDocument();\r\n  })\r\n})","type":"code","id":"nvhm0"},{"content":"function AccessibleName(){\r\n  return (\r\n    <div>\r\n      <button>Submit</button>\r\n      <button>Reset</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nrender(<AccessibleName />)","type":"code","id":"sc3i8"},{"content":"test(\"can select by accessible name\", () =>{\r\n  render(<AccessibleName/>)\r\n  \r\n  const sibmitButton = screen.getByRole(\"button\", {name: /submit/i})\r\n  const cancelButton = screen.getByRole(\"button\", {name: /cancel/i})\r\n\r\n  expect(submitButton).toBeInThedocument();\r\n  expect(cancelButton).toBeInThedocument();\r\n})","type":"code","id":"jnmu4"},{"content":"function MoreNames(){\r\n  return (\r\n    <div> \r\n      <label htmlFor=\"email\" >Email</label>\r\n      <input id=\"email\" />\r\n      <br/>\r\n      <label htmlFor=\"search\">Search</label>\r\n      <input id=\"search\" />\r\n    </div>\r\n  )\r\n}\r\n\r\nrender(<MoreNames/>)","type":"code","id":"amaht"},{"content":"test(\"shows an email and search input\", () => {\r\n  render(<MoreNames/>)\r\n\r\n  const emailInput = screen.getByRole(\"textbox\", {\r\n    name: /email/i\r\n  })\r\n\r\n  const searchInput = screen.getByRole(\"textbox\", {\r\n    name: /search/i\r\n  })\r\n\r\n  expect(emailInput).toBeInTheDocument()\r\n  expect(searchInput).toBeInTheDocument()\r\n})","type":"code","id":"ejg62"},{"content":"function IconButtons(){\r\n  return (\r\n    <div>\r\n      <button aria-label={\"sign in\"}><svg/></button>\r\n      <button aria-label={\"sign out\"}><svg/></button>\r\n    </div>\r\n  )\r\n}\r\n\r\nrender(<IconButtons />)","type":"code","id":"wjsge"},{"content":"test(\"find elements base on label\", () => {\r\n  render(<IconButton/>)\r\n\r\n  const signInButton = screen.getByRole(\"button\", {\r\n    name: /sign in/i\r\n  })\r\n\r\n  const signOutButton = screen.getByRole(\"button\", {\r\n    name: /sign out/i\r\n  })\r\n\r\n  expect(signInButton).toBeInTheDocument();\r\n  expect(signOutButton).toBeInTheDocument()\r\n})","type":"code","id":"z3kc8"}]